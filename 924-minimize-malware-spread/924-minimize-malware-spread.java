class Solution {
    int size , infected ;
    
    public void DFS( int src , boolean[] vis , int[] intial , int[][] graph ){
        
        if( vis[src] == true ) return;
        vis[src] = true;
        
        size++;
        if( Arrays.binarySearch( intial , src ) >= 0 )  infected++;
        
        for( int i = 0; i<graph.length ; i++ ){
            if (graph[src][i] == 1 ){
                DFS( i , vis , intial , graph);
            }
        }
    }
    public int minMalwareSpread(int[][] graph, int[] initial) {
        
        Arrays.sort(initial);
        int n = graph.length;
        
        boolean[] vis = new boolean[n];
        int maxSize = 0, ans = initial[0] ;
        
        for( int src : initial ){
            
            size = infected = 0;
            DFS( src , vis , initial , graph);
            
            if( size > maxSize && infected == 1){
                ans = src;
                maxSize = size;
            }
            
        }
        
        return ans;
    }
}